{"version":3,"sources":["components/commonComponents/CommonGridListItem/CommonGridListItemWrapper.tsx","app/KabuRecord/functions/handleCalKabu.ts","app/KabuRecord/functions/HandleKabuTrend.ts","app/KabuRecord/config.ts","app/KabuRecord/components/OtherDayKabuItemHeader.tsx","app/KabuRecord/containers/InputItemContainer.tsx","app/KabuRecord/components/OtherDayKabuItem.tsx","app/KabuRecord/components/OtherDayKabuForm.tsx","app/KabuRecord/components/KabuTrendTypePrediction.tsx","app/KabuRecord/containers/OtherDayKabuFormContainer.tsx","app/KabuRecord/functions/HandleLocalStorage.ts","app/KabuRecord/components/Header.tsx","app/KabuRecord/components/Footer.tsx","app/KabuRecord/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["CommonGridListItemWrapper","props","ListItem","Grid","container","widthRatios","map","w","i","item","xs","key","children","handleCalKabu","sundayPrice","mondayMorningPrice","toFixed","HandleKabuTrends","otherDaysPrices","sun","morning","mon","afternoon","tue","wed","thu","fri","sat","kabuValue","K","Number","prices","includes","number1","number2","originPrice","p","res","length","this","getTwoNumbersRatio","priceRatios","position","priceMultiWithOriginPrice","getPriceMultiWithOriginPrice","getPricesRatios","reboundPosition","getPositionOfReboundInPriceRatios","firstPeriodPricePosition","firstPeriodPriceMulti","secondPeriodPricePosition","secondPeriodPriceMulti","thirdPeriodPricePosition","thirdPeriodPriceMulti","forthPeriodPricePosition","forthPeriodPriceMulti","haveRebound","highestPricePosition","undefined","pricesBeforeLastCheck","slice","priceRatiosBeforeLastCheck","isAllPricesBeforeLastCheckAreHaveValues","checkPricesAreAllBiggerThanZero","reboundPositionBeforeLastCheck","getReboundAndHighestPricePosition","kabuTrendTypes","isNoReboundBeforeLastCheck","checkIsNoReboundBeforeLastPosition","isForthPriceMultiSmallerThanReboundTrendSeperatingMulti","console","log","KabuValue","typesFromKabuValue","getKabuTrendPredictionsFromKabuValue","getForthKabuTrendsAndPricePosition","getWaveOrForthKabuTrendType","getDecrementOrThirdOrForthKabuTrendsAndPricePosition","otherDayKabuItemWidthRatios","kabuTrends","notDefined","decrement","wave","third","forth","otherDaysText_zhTw","dayTimesText_zhTw","highestPositionToText","0","1","2","3","4","5","6","7","8","9","10","11","12","OtherDayKabuItemHeader","ListItemText","InputItemContainer","id","value","variant","onChange","handleChange","useCallback","e","target","TextField","type","OtherDayKabuItem","date","day","dayTimePrices","Box","paddingLeft","dayTime","String","OtherDayKabuForm","paddingY","Paper","elevation","Divider","otherDayList","d","KabuTrendTypePrediction","trendsStr","trend","join","display","alignItems","paddingTop","paddingBottom","Typography","OtherDayKabuFormContainer","Kabu","useState","initOtherDayPrices","dayPrices","setDayPrices","dayAndTime","useEffect","localStorage","setItem","JSON","stringify","Object","keys","getThisWeekPrices","kabuTrendTypesAndPricePosition","getPresiceTrendType","Container","initDayPrices","defaultInitOtherDayPrices","HandleLocalStorage","data","getItem","parsed","parse","useStyles","makeStyles","theme","root","backgroundColor","Header","classes","className","justifyContent","paddingRight","src","alt","style","width","height","LinkItemInFooter","href","title","Link","links","Footer","link","process","KabuRecord","minHeight","getData","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.48133152.chunk.js","sourcesContent":["import React from 'react';\nimport { Box, ListItem, Grid } from '@material-ui/core';\nimport { CommonGridListItemWrapperProps } from './types';\n\nconst CommonGridListItemWrapper = (props: CommonGridListItemWrapperProps) => {\n  return (\n    <ListItem>\n      <Grid container>\n        {props.widthRatios.map((w, i) => (\n          <Grid item xs={w} key={i}>\n            {props.children[i]}\n          </Grid>\n        ))}\n      </Grid>\n    </ListItem>\n  );\n};\n\nexport default CommonGridListItemWrapper;","const handleCalKabu = (sundayPrice: number, mondayMorningPrice: number) => {\n  if(sundayPrice === 0 || mondayMorningPrice === 0) {\n    return 0;\n  }\n  return ((mondayMorningPrice / sundayPrice) * 100).toFixed(2);\n};\n\nexport default handleCalKabu;","import { KabuTrendType, SingleWeekKabuRecord } from \"../types\";\nimport handleCalKabu from \"./handleCalKabu\";\nimport { KabuTrendsAndHighestPricePosition } from '../types';\n\nconst reboundTrendSeperatingMulti = 1.4;\nexport const noReboundPosition = -1000;\n//check decrement first(last position is thu afternoon(index: 8))\nconst lastCheckReboundPosition = 8 + 1;\n\nclass HandleKabuTrends {\n  //from sun ~ sat, length is 13\n  static getThisWeekPrices(otherDaysPrices: SingleWeekKabuRecord['otherDaysPrice']): number[] {\n    return [\n      otherDaysPrices.sun.morning,\n\n      otherDaysPrices.mon.morning,\n      otherDaysPrices.mon.afternoon,\n\n      otherDaysPrices.tue.morning,\n      otherDaysPrices.tue.afternoon,\n\n      otherDaysPrices.wed.morning,\n      otherDaysPrices.wed.afternoon,\n\n      otherDaysPrices.thu.morning,\n      otherDaysPrices.thu.afternoon,\n\n      otherDaysPrices.fri.morning,\n      otherDaysPrices.fri.afternoon,\n\n      otherDaysPrices.sat.morning,\n      otherDaysPrices.sat.afternoon,\n    ];\n  }\n  \n  static getKabuTrendPredictionsFromKabuValue(kabuValue: number | string): KabuTrendType[] {\n    const K = Number(kabuValue);\n    if(K === 0) {\n      return ['notDefined'];\n    }\n    if(K >= 91) {\n      return ['wave', 'forth'];\n    }\n    else if(K >= 85) {\n      return ['third', 'forth', 'decrement'];\n    } \n    else if(K >= 80) {\n      return ['third', 'forth'];\n    }\n    else if(K >= 60) {\n      return ['wave', 'forth'];\n    }\n    return ['forth'];\n  }\n\n  static checkPricesAreAllBiggerThanZero(prices: number[]) {\n    if(prices.includes(0)) {\n      return false;\n    }\n    return true;\n  }\n\n  static getTwoNumbersRatio(number1: number, number2: number) {\n    if(number2 === 0) {\n      return 0;\n    }\n    return number2 - number1;\n  }\n\n  static getPriceMultiWithOriginPrice(prices: number[]) {\n    const originPrice = prices[0];\n    return prices.map(p => {\n      if(originPrice === 0) {\n        return 0;\n      }\n      return (\n        Number((p / originPrice).toFixed(2))\n      );\n    });\n  }\n\n  static getPricesRatios(prices: number[]) {\n    let res: number[] = [];\n    for (let i = 0; i < prices.length; i++) {\n      if(i === 0 || i === 1) {\n        res[i] = 0;\n      } else {\n        res[i] = this.getTwoNumbersRatio(prices[i - 1], prices[i]);\n      }\n    }\n    return res;\n  }\n\n  static getPositionOfReboundInPriceRatios(priceRatios: number[]) {\n    let position = -1; //rebound not confirmed\n\n    for (let i = 0; i < priceRatios.length; i++) {\n      const ratio = priceRatios[i];\n      //exclude sunday position\n      if(ratio > 0 && i > 0) {\n        //if ratio is bigger than 0, it is not a decrement type\n        position = i;\n        break;\n      }\n    }\n\n    return position;\n  }\n\n  static getReboundAndHighestPricePosition(prices: number[]): {\n    haveRebound: boolean,\n    highestPricePosition?: {\n      firstPeriodPricePosition: number,\n      firstPeriodPriceMulti: number,\n\n      secondPeriodPricePosition: number,\n      secondPeriodPriceMulti: number,\n\n      thirdPeriodPricePosition: number,\n      thirdPeriodPriceMulti: number,\n\n      forthPeriodPricePosition: number,\n      forthPeriodPriceMulti: number,\n    }\n  } {\n    const priceMultiWithOriginPrice = this.getPriceMultiWithOriginPrice(prices);\n\n    const priceRatios = this.getPricesRatios(prices);\n    const reboundPosition = this.getPositionOfReboundInPriceRatios(priceRatios);\n\n    const firstPeriodPricePosition = reboundPosition;\n    const firstPeriodPriceMulti = priceMultiWithOriginPrice[firstPeriodPricePosition];\n\n    const secondPeriodPricePosition = reboundPosition + 1;\n    const secondPeriodPriceMulti = priceMultiWithOriginPrice[secondPeriodPricePosition];\n\n    const thirdPeriodPricePosition = reboundPosition + 2;\n    const thirdPeriodPriceMulti = priceMultiWithOriginPrice[thirdPeriodPricePosition];\n\n    const forthPeriodPricePosition = reboundPosition + 3;\n    const forthPeriodPriceMulti = priceMultiWithOriginPrice[forthPeriodPricePosition];\n\n\n    if(reboundPosition === -1) {\n      return ({\n        haveRebound: false,\n        highestPricePosition: undefined\n      });\n    }\n\n    return ({\n      haveRebound: true,\n      highestPricePosition: {\n        firstPeriodPricePosition,\n        firstPeriodPriceMulti,\n\n        secondPeriodPriceMulti,\n        secondPeriodPricePosition,\n\n        thirdPeriodPricePosition,\n        thirdPeriodPriceMulti,\n\n        forthPeriodPricePosition,\n        forthPeriodPriceMulti,\n      }\n    });\n  }\n\n  static checkIsNoReboundBeforeLastPosition(prices: number[]) {\n    const priceRatios = this.getPricesRatios(prices);\n    const pricesBeforeLastCheck = prices.slice(0, lastCheckReboundPosition);\n    const priceRatiosBeforeLastCheck = priceRatios.slice(0, lastCheckReboundPosition);\n\n    const isAllPricesBeforeLastCheckAreHaveValues = this.checkPricesAreAllBiggerThanZero(pricesBeforeLastCheck);\n    const reboundPositionBeforeLastCheck = this.getPositionOfReboundInPriceRatios(priceRatiosBeforeLastCheck);\n\n    const noReboundBeforeLastCheck = \n      isAllPricesBeforeLastCheckAreHaveValues &&\n      reboundPositionBeforeLastCheck === -1;\n    \n    return noReboundBeforeLastCheck;\n  }\n\n  static getWaveOrForthKabuTrendType(prices: number[]): KabuTrendsAndHighestPricePosition {\n    const pricesBeforeLastCheck = prices.slice(0, lastCheckReboundPosition);\n    const priceRatios = this.getPricesRatios(pricesBeforeLastCheck);\n\n    const {\n      haveRebound,\n      highestPricePosition,\n    } = this.getReboundAndHighestPricePosition(pricesBeforeLastCheck);\n\n    if(haveRebound && highestPricePosition && highestPricePosition.secondPeriodPriceMulti > 1) {\n      const {\n        forthPeriodPriceMulti,\n        forthPeriodPricePosition\n      } = highestPricePosition;\n\n      const isForthPeriod = \n        forthPeriodPriceMulti > 1.5 && \n        forthPeriodPriceMulti <= 2;\n      \n      if(isForthPeriod) {\n        return ({\n          kabuTrendTypes: ['forth'],\n          highestPricePosition: forthPeriodPricePosition\n        });\n      }\n    \n      //check is no rebound\n      const isNoReboundBeforeLastCheck = this.checkIsNoReboundBeforeLastPosition(prices);\n      //check have rebound but forth price is smaller than reboundTrendSeperatingMulti\n      const isForthPriceMultiSmallerThanReboundTrendSeperatingMulti = \n        priceRatios[forthPeriodPricePosition] > 0 &&\n        forthPeriodPriceMulti < reboundTrendSeperatingMulti;\n      console.log(priceRatios, priceRatios[forthPeriodPricePosition], forthPeriodPriceMulti);\n    \n      if(isNoReboundBeforeLastCheck || isForthPriceMultiSmallerThanReboundTrendSeperatingMulti) {\n        return ({\n          kabuTrendTypes: ['wave'],\n          highestPricePosition: undefined\n        });\n      }\n    }\n\n    return ({\n      kabuTrendTypes: ['forth', 'wave'],\n      highestPricePosition: undefined\n    });\n  }\n\n  static getDecrementOrThirdOrForthKabuTrendsAndPricePosition(prices: number[], kabuTrendTypes: KabuTrendType[]): KabuTrendsAndHighestPricePosition {\n    const {\n      haveRebound,\n      highestPricePosition,\n    } = this.getReboundAndHighestPricePosition(prices);\n\n    if(haveRebound && highestPricePosition && highestPricePosition.secondPeriodPriceMulti > 1) {\n      const {\n        secondPeriodPriceMulti,\n        thirdPeriodPricePosition,\n        forthPeriodPricePosition,\n      } = highestPricePosition;\n      \n      if(secondPeriodPriceMulti < reboundTrendSeperatingMulti) {\n        return ({\n          kabuTrendTypes: ['forth'],\n          highestPricePosition: forthPeriodPricePosition\n        });\n      } else {\n        return ({\n          kabuTrendTypes: ['third'],\n          highestPricePosition: thirdPeriodPricePosition\n        });\n      }\n    }\n\n    //maybe decrement / third / forth\n    const haveDecrementKabuTrendType = kabuTrendTypes.includes('decrement');\n\n    if(haveDecrementKabuTrendType && !haveRebound) {\n      return ({\n        kabuTrendTypes: ['third', 'forth', 'decrement'],\n        highestPricePosition: undefined\n      });\n    }\n     \n    return ({\n      kabuTrendTypes: ['third', 'forth'],\n      highestPricePosition: undefined\n    });\n  }\n\n  static getForthKabuTrendsAndPricePosition(prices: number[]): KabuTrendsAndHighestPricePosition {\n    const {\n      haveRebound,\n      highestPricePosition,\n    } = this.getReboundAndHighestPricePosition(prices);\n\n    if(haveRebound && highestPricePosition) {\n      return ({\n        kabuTrendTypes: ['forth'],\n        highestPricePosition: highestPricePosition.forthPeriodPricePosition\n      });\n    }\n\n    return ({\n      kabuTrendTypes: ['forth'],\n      highestPricePosition: undefined\n    });\n  }\n\n  static getPresiceTrendType(prices: number[]): KabuTrendsAndHighestPricePosition {\n    const priceMultiWithOriginPrice = this.getPriceMultiWithOriginPrice(prices);\n    const priceRatios = this.getPricesRatios(prices);\n    //rebound is first\n    const reboundPosition = this.getPositionOfReboundInPriceRatios(priceRatios);\n    console.log(priceMultiWithOriginPrice, priceRatios, reboundPosition);\n\n    const KabuValue = handleCalKabu(prices[0], prices[1]);\n    const typesFromKabuValue = this.getKabuTrendPredictionsFromKabuValue(KabuValue);\n\n    const isReboundBeforeLastCheck = this.checkIsNoReboundBeforeLastPosition(prices);\n    if(isReboundBeforeLastCheck) {\n      return ({\n        kabuTrendTypes: ['decrement'],\n        highestPricePosition: noReboundPosition,\n      });\n    }\n\n    //check forth\n    const isForth = \n      typesFromKabuValue.includes('forth') && \n      typesFromKabuValue.length === 1;\n    \n    if(isForth) {\n      return this.getForthKabuTrendsAndPricePosition(prices);\n    }\n\n    //check is wave / third / forth\n\n    //check is forth or wave\n    const isWaveOrForth = \n      typesFromKabuValue.includes('wave') && \n      typesFromKabuValue.includes('forth');\n\n    if(isWaveOrForth) {\n      return this.getWaveOrForthKabuTrendType(prices);\n    }\n    \n    //check is third or forth\n    const isDecrementOrThirdOrForth = \n      typesFromKabuValue.includes('third') && \n      typesFromKabuValue.includes('forth');\n\n    if(isDecrementOrThirdOrForth) {\n      return this.getDecrementOrThirdOrForthKabuTrendsAndPricePosition(prices, typesFromKabuValue);\n    }\n\n    //last get basic default types from KabuValue\n    return ({\n      kabuTrendTypes: typesFromKabuValue,\n      highestPricePosition: undefined,\n    });\n  }\n}\n\nexport default HandleKabuTrends;","import { GridRatio } from \"common-types\";\nimport { KabuTrendType, OtherDayType, DayTimeType } from \"./types\";\nimport { noReboundPosition } from \"./functions/HandleKabuTrend\";\n\nexport const localStorageKey = 'KabuForm';\n\nexport const otherDayKabuItemWidthRatios = [2, 5, 5] as GridRatio[];\n\nexport const kabuTrends: {\n  [t in KabuTrendType]: string\n} = {\n  notDefined: '資料不足',\n  decrement: '遞減型',\n  wave: '波型(最大價格1.1 ~ 1.5倍)',\n  third: '三期型(最大價格約2 ~ 6倍)',\n  forth: '四期型(最大價格約1.4 ~ 2倍)',\n};\n\nexport const positionUndefinedText_zhTw = '價格尚不足/可能為波型，無法預測最大值時間';\nexport const decrement_zhTw = '此為遞減型，不會有最大值，可以準備脫手賣掉了';\n\nexport const otherDaysText_zhTw: {\n  [day in OtherDayType]: string\n} = {\n  sun: '星期日',\n  mon: '星期一',\n  tue: '星期二',\n  wed: '星期三',\n  thu: '星期四',\n  fri: '星期五',\n  sat: '星期六',\n};\n\nexport const dayTimesText_zhTw: {\n  [dayTime in DayTimeType]: string\n} = {\n  morning: '上午(8:00~11:59)',\n  afternoon: '下午(12:00~22:00)'\n};\n\nexport const highestPositionToText: {\n  [x: number]: string\n} = {\n  0: `${otherDaysText_zhTw.sun} ${dayTimesText_zhTw.morning}`,\n\n  1: `${otherDaysText_zhTw.mon} ${dayTimesText_zhTw.morning}`,\n  2: `${otherDaysText_zhTw.mon} ${dayTimesText_zhTw.afternoon}`,\n\n  3: `${otherDaysText_zhTw.tue} ${dayTimesText_zhTw.morning}`,\n  4: `${otherDaysText_zhTw.tue} ${dayTimesText_zhTw.afternoon}`,\n\n  5: `${otherDaysText_zhTw.wed} ${dayTimesText_zhTw.morning}`,\n  6: `${otherDaysText_zhTw.wed} ${dayTimesText_zhTw.afternoon}`,\n\n  7: `${otherDaysText_zhTw.thu} ${dayTimesText_zhTw.morning}`,\n  8: `${otherDaysText_zhTw.thu} ${dayTimesText_zhTw.afternoon}`,\n\n  9: `${otherDaysText_zhTw.fri} ${dayTimesText_zhTw.morning}`,\n  10: `${otherDaysText_zhTw.fri} ${dayTimesText_zhTw.afternoon}`,\n\n  11: `${otherDaysText_zhTw.sat} ${dayTimesText_zhTw.morning}`,\n  12: `${otherDaysText_zhTw.sat} ${dayTimesText_zhTw.afternoon}`,\n};\n\nexport const getHighestPositionText = (position: number | undefined): string => {\n  if(position === noReboundPosition) {\n    return decrement_zhTw;\n  }\n  if(typeof position === 'undefined') {\n    return positionUndefinedText_zhTw; \n  } else {\n    return highestPositionToText[position];\n  }\n  \n};\n\n","import React from 'react';\nimport { Box, ListItem, ListItemText } from '@material-ui/core';\nimport CommonGridListItemWrapper from 'components/commonComponents/CommonGridListItem/CommonGridListItemWrapper';\nimport { otherDayKabuItemWidthRatios } from '../config';\n\nconst OtherDayKabuItemHeader = () => {\n  return (\n    <CommonGridListItemWrapper\n      widthRatios={otherDayKabuItemWidthRatios}\n    >\n      <ListItemText>\n        {'日期'}\n      </ListItemText>\n      <ListItemText>\n        {'上午(8:00~11:59)'}\n      </ListItemText>\n      <ListItemText>\n        {'下午(12:00~22:00)'}\n      </ListItemText>\n    </CommonGridListItemWrapper>\n  );\n};\n\nexport default OtherDayKabuItemHeader;","import React, { useCallback, ChangeEvent } from 'react';\nimport { Box, TextField } from '@material-ui/core';\nimport { InputItemContainerProps } from '../types';\n\nconst InputItemContainer = (props: InputItemContainerProps) => {\n  const {\n    id,\n    value,\n    variant='standard',\n    onChange\n  } = props;\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if(onChange) {\n      const {\n        value\n      } =  e.target;\n      onChange(props, value);\n    }\n  }, [onChange, props]);\n\n  return (\n    <TextField\n      {...props}\n      type={'number'}\n      variant={variant as any}\n      onChange={handleChange}\n      value={value} />\n  );\n};\n\nexport default InputItemContainer;","import React from 'react';\nimport { Box, ListItem, ListItemText, Grid } from '@material-ui/core';\nimport { OtherDayKabuItemProps } from './types';\nimport InputItemContainer from '../containers/InputItemContainer';\nimport CommonGridListItemWrapper from 'components/commonComponents/CommonGridListItem/CommonGridListItemWrapper';\nimport { otherDayKabuItemWidthRatios, otherDaysText_zhTw } from '../config';\n\nconst OtherDayKabuItem = (props: OtherDayKabuItemProps) => {\n  const {\n    date,\n    day,\n    dayTimePrices,\n  } = props;\n\n  return (\n    <CommonGridListItemWrapper\n      widthRatios={otherDayKabuItemWidthRatios}\n    >\n      <ListItemText>\n        {`${date || ''}${otherDaysText_zhTw[day]}`}\n      </ListItemText>\n      <Box paddingLeft={0.5}>\n        <InputItemContainer\n          id={`${day}-${'morning'}`}\n          day={day}\n          dayTime={'morning'}\n          value={String(dayTimePrices.morning)}\n          onChange={props.onChange} />\n      </Box>\n      <Box paddingLeft={0.5}>\n        <InputItemContainer\n          id={`${day}-${'afternoon'}`}\n          day={day}\n          dayTime={'afternoon'}\n          value={String(dayTimePrices.afternoon)}\n          onChange={props.onChange} />\n      </Box>\n    </CommonGridListItemWrapper>\n  );\n};\n\nexport default OtherDayKabuItem;","import React from 'react';\nimport { Box, Paper, Divider } from '@material-ui/core';\nimport OtherDayKabuItemHeader from './OtherDayKabuItemHeader';\nimport { OtherDayKabuFormProps } from './types';\nimport OtherDayKabuItem from './OtherDayKabuItem';\n\nconst OtherDayKabuForm = (props: OtherDayKabuFormProps) => {\n  return (\n    <Box paddingY={1}>\n      <Paper elevation={2}>\n        <OtherDayKabuItemHeader />\n        <Divider />\n        {props.otherDayList.map((d, i) => (\n          <OtherDayKabuItem\n            key={i}\n            {...d}\n            onChange={props.onChange} />\n        ))}\n      </Paper>\n    </Box>\n  );\n};\n\nexport default OtherDayKabuForm;","import React from 'react';\nimport { Box, Typography, Divider } from '@material-ui/core';\nimport { KabuTrendTypePredictionProps } from './types';\nimport { kabuTrends, highestPositionToText, getHighestPositionText } from '../config';\n\nconst KabuTrendTypePrediction = (props: KabuTrendTypePredictionProps) => {\n  const trendsStr = props.kabuTrendTypes.map(\n    trend => kabuTrends[trend]\n  ).join(' / ');\n\n  console.log(props.highestPricePosition);\n  \n  return (\n    <Box>\n      <Box display={'flex'} alignItems={'center'} paddingTop={1} paddingBottom={1}>\n        <Typography>\n          {'目前可能趨勢: '}\n        </Typography>\n        <Typography variant={'h6'}>\n          {`${trendsStr}`}\n        </Typography>\n      </Box>\n      <Divider />\n      <Box display={'flex'} alignItems={'center'} paddingTop={1} paddingBottom={1}>\n        <Typography>\n          {'預測價格最大值時間: '}\n        </Typography>\n        <Typography variant={'h5'}>\n          {`${getHighestPositionText(props.highestPricePosition)}`}\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default KabuTrendTypePrediction;","import React, { useState, useCallback, useEffect } from 'react';\nimport { Box, Divider, Typography, Container } from '@material-ui/core';\nimport OtherDayKabuForm from '../components/OtherDayKabuForm';\nimport { DayAndTime, SingleWeekKabuRecord, OtherDayType } from '../types';\nimport InputItemContainer from './InputItemContainer';\nimport handleCalKabu from '../functions/handleCalKabu';\nimport { OtherDayKabuFormContainerProps } from './types';\nimport { localStorageKey } from '../config';\nimport KabuTrendTypePrediction from '../components/KabuTrendTypePrediction';\nimport HandleKabuTrends from '../functions/HandleKabuTrend';\n\nconst OtherDayKabuFormContainer = (props: OtherDayKabuFormContainerProps) => {\n  let Kabu: number | string = 0;\n  const [dayPrices, setDayPrices] = useState(props.initOtherDayPrices);\n\n  const handleChange = useCallback((dayAndTime: DayAndTime, value: string) => {\n    setDayPrices(d => ({\n      ...d,\n      [dayAndTime.day]: {\n        ...d[dayAndTime.day],\n        [dayAndTime.dayTime]: Number(value),\n      }\n    }));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dayPrices));\n  }, [dayPrices]);\n\n  //excludes sunday\n  const days = Object.keys(dayPrices).slice(1) as OtherDayType[];\n  const otherDayList = days.map(day => ({\n    day,\n    dayTimePrices: dayPrices[day]\n  }));\n\n  Kabu = handleCalKabu(dayPrices.sun.morning, dayPrices.mon.morning);\n  const prices = HandleKabuTrends.getThisWeekPrices(dayPrices);\n  const kabuTrendTypesAndPricePosition = HandleKabuTrends.getPresiceTrendType(prices);\n\n  return (\n    <Container>\n      \n      <Box>\n        <Typography variant={'h6'}>\n          {'週日原買價'}\n        </Typography>\n        <InputItemContainer\n          id={'sunday-morning'}\n          day={'sun'}\n          dayTime={'morning'}\n          variant={'outlined'}\n          onChange={handleChange}\n          value={String(dayPrices.sun.morning)} />\n      </Box>\n      <OtherDayKabuForm\n        otherDayList={otherDayList}\n        onChange={handleChange} />\n      <Typography variant={'h5'}>\n        {`Kabu值(%): ${Kabu}`}\n      </Typography>\n      <Divider />\n      <KabuTrendTypePrediction\n        {...kabuTrendTypesAndPricePosition} />\n    </Container>\n  );\n};\n\nexport default OtherDayKabuFormContainer;","import { OtherDayKabuFormContainerProps } from \"../containers/types\";\nimport { localStorageKey } from \"../config\";\n\nexport const initDayPrices = {\n  'morning': 0,\n  'afternoon': 0,\n};\n\nexport const defaultInitOtherDayPrices: OtherDayKabuFormContainerProps['initOtherDayPrices'] = {\n  'sun': initDayPrices,\n  'mon': initDayPrices,\n  'tue': initDayPrices,\n  'wed': initDayPrices,\n  'thu': initDayPrices,\n  'fri': initDayPrices,\n  'sat': initDayPrices,\n};\n\nclass HandleLocalStorage {\n  static getData() {\n    const data = localStorage.getItem(localStorageKey);\n    if(data) {\n      const parsed = JSON.parse(data);\n      console.log(parsed);\n      return parsed as OtherDayKabuFormContainerProps['initOtherDayPrices'];\n    }\n    return defaultInitOtherDayPrices;\n  }\n}\n\nexport default HandleLocalStorage;","import React from 'react';\nimport { Box, Typography, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: '#b0f7e3'\n  }\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <Box \n      className={classes.root} \n      paddingLeft={2} \n      paddingY={2}\n      display={'flex'}\n      alignItems={'center'}\n      justifyContent={'space-between'}\n    >\n      <Box\n        display={'flex'}\n        alignItems={'center'}\n      >\n        <Box paddingRight={2}>\n          <img \n            src={'./images/Animal_Crossing_Leaf.png'} \n            alt={'logo'} \n            style={{\n              width: 20,\n              height: 'auto'\n            }}\n          />\n        </Box>\n        <Typography>\n          {'動物森友會 Animal Crossing New Horizons 大頭菜價格趨勢預測'}\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport { Box, Typography, Link, Divider } from '@material-ui/core';\n\nconst version = process.env.REACT_APP_VERSION;\n\nexport const LinkItemInFooter = ({\n  href,\n  title,\n}: {\n  href: string\n  title: string\n}) => {\n  return (\n    <Link \n      display={'block'}\n      href={href}\n      target={'_blank'}\n    >\n      {title}\n    </Link>\n  );\n};\n\nconst links = [\n  {\n    href: 'https://forum.gamer.com.tw/Co.php?bsn=7287&sn=19239',\n    title: '巴哈姆特 【攻略】大頭菜教學 讓你輕鬆致富'\n  },\n  {\n    href: 'https://forum.gamer.com.tw/Co.php?bsn=60539&sn=46540',\n    title: '巴哈姆特 【攻略】動物之森，炒股(蕪菁)攻略-日wiki'\n  },{\n    href: 'https://w.atwiki.jp/doubutsunomori3ds/pages/99.html',\n    title: '日文wiki'\n  },\n];\n\nconst Footer = () => {\n  return (\n    <Box\n      style={{\n        backgroundColor: '#eee'\n      }}\n      paddingLeft={2} \n      paddingY={2}\n    >\n      <Typography>\n        {'投資有賺有賠，資料僅供預測，如有任何預測失準，一切以遊戲為主'}\n      </Typography>\n      <Divider />\n      {links.map((link, i) => (\n        <LinkItemInFooter\n          key={i}\n          {...link} />\n      ))}\n      <Divider />\n      <Typography>{`v${version}`}</Typography>\n    </Box>\n  );\n};\n\nexport default Footer;","import React from 'react';\nimport { OtherDayKabuFormContainerProps } from './containers/types';\nimport OtherDayKabuFormContainer from './containers/OtherDayKabuFormContainer';\nimport HandleLocalStorage from './functions/HandleLocalStorage';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport { Box } from '@material-ui/core';\n\nexport const initDayPrices = {\n  'morning': 0,\n  'afternoon': 0,\n};\n\nexport const defaultInitOtherDayPrices: OtherDayKabuFormContainerProps['initOtherDayPrices'] = {\n  'sun': initDayPrices,\n  'mon': initDayPrices,\n  'tue': initDayPrices,\n  'wed': initDayPrices,\n  'thu': initDayPrices,\n  'fri': initDayPrices,\n  'sat': initDayPrices,\n};\n\nconst KabuRecord = () => {\n  return (\n    <>\n      <Header />\n      <Box style={{\n        minHeight: '100vh'\n      }}>\n        <OtherDayKabuFormContainer\n          initOtherDayPrices={HandleLocalStorage.getData()} />\n      </Box>\n      <Footer />\n    </>\n  );\n};\n\nexport default KabuRecord;","import React from 'react';\nimport './App.css';\nimport KabuRecord from 'app/KabuRecord';\n// import 'style/style.css';\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <KabuRecord />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}